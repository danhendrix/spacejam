@import url('https://fonts.googleapis.com/css2?family=Comic+Neue:ital,wght@0,400;0,700;1,400&display=swap');

body {
    font-family: 'Comic Neue', cursive;
}

%buttonTemplate {
    background-color: rgb(50, 50, 50);
    border: 1px solid rgba(150, 150, 150, 0.75);
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),
        0px 4px 5px 0px rgba(0, 0, 0, 0.14),
        0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    color: rgb(240, 240, 240);
    transition: border linear 200ms;

    &:focus {
        border: 1px solid rgb(240, 240, 240);
        outline: none;
    }

    &:hover {
        border: 1px solid rgb(240, 240, 240);
        cursor: pointer;
    }
}

/** 
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
    MESSAGE MODAL STYLES
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
 */

.messageModal {
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 25px 0;
    justify-content: center;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    padding: 20px;
    position: absolute;
    width: 100%;
    z-index: 2;

    @media only screen and (orientation: landscape) {
        @media only screen and (max-width: 700px) {
            flex-direction: row;
            gap: 0 20px;
        }
    }

    .npcMessage {
        background-color: rgb(30, 30, 30);
        border: 30px solid transparent;
        border-image: url('../assets/modalBorder.png') 30% round;
        border-image-outset: 20px;
        box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),
            0px 3px 4px 0px rgba(0, 0, 0, 0.14),
            0px 1px 8px 0px rgba(0, 0, 0, 0.12);
        color: white;
        border-radius: 15px;
        font-size: 1.125rem;
        height: 60%;
        letter-spacing: 1px;
        line-height: 1.5;
        max-height: 250px;
        max-width: 500px;
        overflow-y: auto;
        overflow-x: none;
        width: 100%;
    }

    .inputContainer {
        display: flex;
        flex-wrap: wrap;
        max-width: 300px;
        min-height: 150px;
        width: 100%;
    }

    .answerContainer {
        display: flex;
        align-items: center;
        flex-direction: column;
        gap: 5px;
        width: 100%;
    }

    .answerLabel {
        color: rgb(240, 240, 240);
        font-size: 1.5rem;
        font-weight: bold;
        width: max-content;
    }

    .answerInput {
        background-color: rgb(30, 30, 30);
        border: 1px solid rgba(200, 200, 200, 0.5);
        color: rgb(240, 240, 240);
        font-size: 2rem;
        padding: 5px 0;
        text-align: center;
        max-width: 100px;

        &:focus {
            background-color: rgb(40, 40, 40);
            border: 1px solid rgba(200, 200, 200, 1);
            outline: none;
        }
    }

    .modalButtonContainer {
        display: flex;
        align-self: flex-end;
        justify-content: center;
        width: 100%;
    }

    .modalButton {
        @extend %buttonTemplate;
        border-radius: 25px;
        font-size: 1.125rem;
        margin: 0 10px;
        padding: 15px 0;
        width: 100%;

        &:focus {
            outline: 2px solid white;
        }

        &:hover {
            cursor: pointer;
        }
    }
}

/** 
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
    GAME CONTAINER STYLES
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
 */

.gameContainer {
    background-color: rgb(30, 30, 30);
    background-image: url('../assets/backgrounds/menuBackgroundMedium.png');
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    color: rgb(240, 240, 240);
    display: grid;
    align-items: center;
    height: 100vh;
    margin: auto;
    position: relative;
    width: 100%;

    @media only screen and (orientation: landscape) {
        grid-template-columns: 80% 20%;
        grid-template-rows: 1fr;
    }

    @media only screen and (orientation: portrait) {
        grid-template-columns: 1fr;
        grid-template-rows: 80% 20%;

        @media only screen and (min-width: 700px) {
            grid-template-columns: 1fr;
            grid-template-rows: 85% 15%;
        }
    }

    .themeToggle {
        position: absolute;
        left: 10px;
        top: 10px;
    }
}

/** 
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
    MENU STYLES
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
 */

.menuContainer {
    display: grid;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 3fr 1fr;
    grid-template-areas:
        'title'
        'info'
        'start';
    justify-items: center;
}

.gameTitle {
    align-self: center;
    grid-area: title;
    text-align: center;

    @media only screen and (orientation: portrait) {
        margin: 50px 0;
    }
}

.playerInfo {
    display: grid;
    grid-area: info;
    justify-items: center;
    max-width: 500px;
    width: 100%;

    @media only screen and (orientation: landscape) {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr;

        @media only screen and (min-width: 700px) {
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 2fr;
        }
    }

    @media only screen and (orientation: portrait) {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 2fr;
    }
}

.nameLabel {
    display: flex;
    flex-direction: column;
    font-size: 1.25rem;
    font-weight: bold;
    height: max-content;
    text-align: center;
    width: 90%;

    &:hover {
        cursor: pointer;
    }
}

.nameInput {
    background-color: rgb(40, 40, 40);
    border: 1px solid rgba(150, 150, 150, 0.75);
    border-radius: 50px;
    color: rgb(240, 240, 240);
    font-size: 16px;
    letter-spacing: 1.125px;
    margin-top: 10px;
    padding: 10px;
    text-align: center;

    &:focus {
        border: 1px solid rgb(240, 240, 240);
        outline: none;
    }
}

.avatarSelection {
    padding: 0 5%;
    width: 100%;
}

.avatarLabel {
    font-size: 1.25rem;
    font-weight: bold;
    text-align: center;
}

.avatarImageContainer {
    display: grid;
    column-gap: 5px;
    row-gap: 20px;
    grid-template-columns: repeat(3, 15vw);
    grid-template-rows: repeat(2, 15vw);
    justify-content: center;
    justify-items: center;
    margin-top: 10px;

    @media only screen and (orientation: landscape) {
        grid-template-columns: repeat(3, 15vh);
        grid-template-rows: repeat(2, 15vh);
    }
}

.avatarButton {
    background-color: rgb(30, 30, 30);
    border: none;
    margin: 0;
    padding: 0;
    max-height: 60px;
    max-width: 60px;
    transition: transform linear 150ms;
    width: 100%;

    &:focus {
        outline: none;
        transform: scale(1.25);
    }

    &:hover {
        cursor: pointer;
        transform: scale(1.25);
    }
}

.avatarImage {
    border: 1px solid rgba(240, 240, 240, 0.75);
    height: auto;
    max-width: 60px;
    width: 100%;

    &.selected {
        outline: 2px solid rgb(240, 240, 240);
    }
}

.startContainer {
    display: flex;
    grid-area: start;
    max-width: 400px;
    padding: 10px;
    width: 100%;
}

.menuButton {
    @extend %buttonTemplate;
    border-radius: 50px / 50px;
    font-size: 0.9rem;
    max-width: 150px;

    @media only screen and (orientation: landscape) {
        margin: auto;
        padding: 10px;
        width: 100%;
    }

    @media only screen and (orientation: portrait) {
        margin: auto;
        padding: 15px;
        width: 40%;
    }

    @media only screen and (min-width: 700px) {
        font-size: 1.25rem;
        padding: 15px;
    }
}

.instructionsContainer {
    background-color: rgba(30, 30, 30, 0.75);
    display: flex;
    flex-direction: column;
    font-size: 1.25rem;
    height: 100vh;
    margin: auto;
    overflow-x: none;
    overflow-y: auto;
    padding: 20px;
    max-width: 800px;
    width: 100%;

    & > .instructions {
        line-height: 1.5;
        width: 100%;
    }
}

/** 
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
    MAIN GAME DISPLAY STYLES
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
 */

.mainDisplay {
    border: 5px solid white;
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),
        0px 4px 5px 0px rgba(0, 0, 0, 0.14),
        0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    justify-self: center;
}

.grid {
    .row {
        display: flex;
        justify-content: center;

        .square {
            background-position: center;
            background-size: contain;
            position: relative;
            height: 10vw;
            width: 10vw;

            @media only screen and (orientation: landscape) {
                max-height: calc((100vh - 25px) / 10);
                max-width: calc((100vh - 25px) / 10);

                @media only screen and (min-width: 700px) {
                    max-height: calc((100vh - 175px) / 10);
                    max-width: calc((100vh - 175px) / 10);
                }

                @media only screen and (min-width: 1000px) {
                    max-height: calc((100vh - 75px) / 10);
                    max-width: calc((100vh - 75px) / 10);
                }
            }

            @media only screen and (orientation: portrait) {
                max-height: calc((100vw - 25px) / 10);
                max-width: calc((100vw - 25px) / 10);

                @media only screen and (min-width: 650px) {
                    max-height: calc((100vw - 150px) / 10);
                    max-width: calc((100vw - 150px) / 10);
                }

                @media only screen and (min-width: 800px) {
                    max-height: calc((100vw - 125px) / 10);
                    max-width: calc((100vw - 125px) / 10);
                }

                @media only screen and (min-width: 1000px) {
                    max-height: calc((100vw - 50px) / 10);
                    max-width: calc((100vw - 50px) / 10);
                }
            }

            /** 
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
    BACKGROUND IMAGES FOR GRID SQUARES
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
 */

            &.empty {
                background-color: rgb(30, 30, 30);
            }

            &.grass {
                background-color: rgb(0, 128, 0);
                background-image: url('../assets/backgrounds/grass.jpg');
            }

            &.path {
                background-color: rgb(146, 99, 77);
                background-image: url('../assets/backgrounds/path.jpg');
            }

            &.pillars {
                background-color: rgb(131, 131, 131);
                background-image: url('../assets/backgrounds/pillars.jpg');
            }

            &.librarySign {
                background-color: rgb(190, 134, 108);
                background-image: url('../assets/backgrounds/librarySign.jpg');
            }

            &.tree {
                background-color: rgb(0, 80, 0);
                background-image: url('../assets/backgrounds/tree.jpg');
            }

            &.dungeonEntrance {
                background-color: rgb(87, 43, 22);
                background-image: url('../assets/backgrounds/dungeonEntrance.jpg');
            }

            &.dungeonFloorBasic {
                background-color: rgb(87, 43, 22);
                background-image: url('../assets/backgrounds/dungeon/dungeonFloorBasic.png');
            }

            &.dungeonFloorHole {
                background-color: rgb(19, 9, 5);
                background-image: url('../assets/backgrounds/dungeon/dungeonFloorHole.png');
            }

            &.dungeonFloorPatch {
                background-color: rgb(87, 43, 22);
                background-image: url('../assets/backgrounds/dungeon/dungeonFloorPatch.jpg');
            }

            &.dungeonStair {
                background-color: rgb(87, 43, 22);
                background-image: url('../assets/backgrounds/dungeon/dungeonStair.jpg');
            }

            &.dungeonTreasure {
                background-color: rgb(151, 122, 67);
                background-image: url('../assets/backgrounds/dungeon/dungeonTreasure.jpg');
            }

            &.dungeonWallInnerCross {
                background-color: rgb(128, 84, 63);
                background-image: url('../assets/backgrounds/dungeon/dungeonWallInnerCross.jpg');
            }

            &.dungeonWallInnerHori {
                background-color: rgb(128, 84, 63);
                background-image: url('../assets/backgrounds/dungeon/dungeonWallInnerHori.jpg');
            }

            &.dungeonWallOuter {
                background-color: rgb(128, 84, 63);
                background-image: url('../assets/backgrounds/dungeon/dungeonWallOuter.jpg');
            }

            &.dungeonWallInnerVertEnd {
                background-color: rgb(128, 84, 63);
                background-image: url('../assets/backgrounds/dungeon/dungeonWallInnerVertEnd.jpg');
            }

            &.dungeonWallInnerVertMid {
                background-color: rgb(128, 84, 63);
                background-image: url('../assets/backgrounds/dungeon/dungeonWallInnerVertMid.jpg');
            }

            &.lairDesk {
                background-color: rgb(185, 185, 185);
                background-image: url('../assets/backgrounds/lair/lairDesk.png');
            }

            &.lairDoor {
                background-color: rgb(185, 185, 185);
                background-image: url('../assets/backgrounds/lair/lairDoor.jpg');
            }

            &.lairFloorBasic {
                background-color: rgb(185, 185, 185);
                background-image: url('../assets/backgrounds/lair/lairFloorBasic.png');
            }

            &.lairFloorGrass {
                background-color: rgb(0, 128, 0);
                background-image: url('../assets/backgrounds/lair/lairFloorGrass.png');
            }

            &.lairFloorPath {
                background-color: rgb(0, 128, 0);
                background-image: url('../assets/backgrounds/lair/lairFloorPath.jpg');
            }

            &.lairWallInside {
                background-color: rgb(131, 131, 131);
                background-image: url('../assets/backgrounds/lair/lairWallInside.jpg');
            }

            &.lairWallOutside {
                background-color: rgb(131, 131, 131);
                background-image: url('../assets/backgrounds/lair/lairWallOutside.jpg');
            }

            &.lairWindowInside {
                background-color: rgb(131, 131, 131);
                background-image: url('../assets/backgrounds/lair/lairWindowInside.jpg');
            }

            &.lairWindowOutside {
                background-color: rgb(131, 131, 131);
                background-image: url('../assets/backgrounds/lair/lairWindowOutside.jpg');
            }

            &.libraryFloorBasic {
                background-color: rgb(255, 216, 158);
                background-image: url('../assets/backgrounds/library/libraryFloorBasic.png');
            }

            &.libraryFloorBookshelfOuter {
                background-color: rgb(190, 162, 120);
                background-image: url('../assets/backgrounds/library/libraryFloorBookshelfOuter.png');
            }

            &.libraryFloorBookshelfInner {
                background-color: rgb(190, 162, 120);
                background-image: url('../assets/backgrounds/library/libraryFloorBookshelfInner.png');
            }

            &.libraryFloorEntry {
                background-color: rgb(189, 160, 116);
                background-image: url('../assets/backgrounds/library/libraryFloorEntry.png');
            }

            &.libraryFloorTable {
                background-color: rgb(190, 162, 120);
                background-image: url('../assets/backgrounds/library/libraryFloorTable.png');
            }

            & > .activeImg,
            & > .npc {
                height: auto;
                width: 60%;
                max-width: 50px;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

            .npc {
                transition: all linear 100ms;
            }

            &.occupied {
                & > .activeImg {
                    left: -5px;
                    transform: translateY(-50%);
                }
            }

            .activeImg {
                & + .npc {
                    left: 45%;
                    transform: translateY(-50%);
                }
            }
        }
    }
}

.gameOverContainer {
    display: flex;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;

    .gameOverContents {
        background-color: rgba(30, 30, 30, 0.75);
        display: flex;
        flex-direction: column;
        font-size: 1.25rem;
        height: 100vh;
        margin: auto;
        overflow-x: none;
        overflow-y: auto;
        padding: 20px;
        max-width: 800px;
        width: 100%;

        & > .gameOverText {
            line-height: 1.5;
            width: 100%;
        }
    }
}

/** 
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
    USER INTERFACE STYLES
 ** ==========-==========-==========-==========-==========
 ** ==========-==========-==========-==========-==========
 */

.gamePanel {
    display: flex;
    justify-content: space-around;
    padding: 10px;

    @media only screen and (orientation: landscape) {
        flex-direction: column;
        height: 100%;
    }

    @media only screen and (orientation: portrait) {
        flex-direction: row;
        height: 100%;
    }

    .keysContainer {
        display: flex;
        justify-content: space-between;

        @media only screen and (orientation: landscape) {
            flex-basis: 50%;
            flex-direction: column;
            max-height: 300px;
            row-gap: 5px;
        }

        @media only screen and (orientation: portrait) {
            column-gap: 5px;
            flex-basis: 50%;
            flex-direction: row;
            max-width: 400px;
        }
    }

    .virtualKey {
        @extend %buttonTemplate;
        border-radius: 15px;
    }

    .arrowKeysContainer {
        display: grid;
        flex-basis: 60%;
        gap: 5px;

        @media only screen and (orientation: landscape) {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            grid-template-areas:
                'up left'
                'down right';

            @media only screen and (min-width: 1200px) {
                grid-template-columns: repeat(3, 1fr);
                grid-template-rows: 50% 50%;
                grid-template-areas:
                    '. up .'
                    'left down right';
            }
        }

        @media only screen and (orientation: portrait) {
            align-content: center;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            grid-template-areas:
                'up left'
                'down right';

            @media only screen and (min-width: 1000px) {
                grid-template-columns: repeat(3, 1fr);
                grid-template-rows: 30% 30%;
                grid-template-areas:
                    '. up .'
                    'left down right';
            }
        }

        .upArrow {
            grid-area: up;
        }

        .leftArrow {
            grid-area: left;
        }

        .downArrow {
            grid-area: down;
        }

        .rightArrow {
            grid-area: right;
        }
    }

    .enterKeyContainer {
        display: flex;
        flex-basis: 35%;
        justify-content: center;

        @media only screen and (orientation: landscape) {
            width: 100%;
        }

        @media only screen and (orientation: portrait) {
            align-items: center;
            height: 100%;

            @media only screen and (min-width: 700px) {
                width: 40%;
            }
        }

        .enterKey {
            width: 100%;

            @media only screen and (orientation: landscape) {
                max-height: 50px;
            }

            @media only screen and (orientation: portrait) {
                height: 100%;
                max-height: 175px;
            }
        }
    }

    .inventoryContainer {
        background-color: rgb(50, 50, 50);
        border: 1px solid white;
        border-radius: 15px;
        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),
            0px 4px 5px 0px rgba(0, 0, 0, 0.14),
            0px 1px 10px 0px rgba(0, 0, 0, 0.12);
        display: flex;
        flex-direction: column;
        align-items: center;
        font-size: 14px;
        overflow-x: hidden;
        overflow-y: auto;
        padding: 5px;

        @media only screen and (orientation: landscape) {
            flex-basis: 40%;
            max-height: 300px;
        }

        @media only screen and (orientation: portrait) {
            flex-basis: 40%;
            max-width: 400px;
        }

        @media only screen and (min-width: 700px) {
            font-size: 20px;
        }

        & > .inventoryGrid {
            display: grid;
            grid-template-rows: auto;
            justify-items: center;
            margin-top: 10px;
            width: 100%;

            @media only screen and (orientation: landscape) {
                grid-template-columns: 1fr 1fr;

                @media only screen and (min-width: 700px) {
                    grid-template-columns: repeat(3, 1fr);
                }

                @media only screen and (min-width: 1000px) {
                    grid-template-columns: repeat(5, 1fr);
                }
            }

            @media only screen and (orientation: portrait) {
                grid-template-columns: repeat(3, 1fr);

                @media only screen and (min-width: 700px) {
                    grid-template-columns: repeat(5, 1fr);
                }
            }

            & .inventoryImage {
                height: auto;
                width: 25px;

                @media only screen and (min-width: 700px) {
                    width: 35px;
                }
            }
        }
    }
}
